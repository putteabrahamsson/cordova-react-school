{"version":3,"sources":["components/FetchData/index.js","components/FlashLight/index.js","App.js","reportWebVitals.js","index.js"],"names":["FetchData","useState","joke","setJoke","loadFromApi","a","options","method","url","headers","accept","axios","request","then","response","obj","data","value","icon","icon_url","key","catch","error","console","useEffect","className","src","width","height","alt","FlashLight","type","onClick","window","plugins","flashlight","available","isAvailable","switchOn","alert","intensity","setTimeout","switchOff","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAyDeA,EAtDG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,KAGdC,EAAW,uCAAG,4BAAAC,EAAA,sDACVC,EAAU,CACdC,OAAQ,MACRC,IACE,wEACFC,QAAS,CACPC,OAAQ,mBACR,iBAAkB,qDAClB,kBAAmB,qDAIvBC,IACGC,QAAQN,GACRO,MAAK,SAAUC,GACd,IAAIC,EAAM,CACRb,KAAMY,EAASE,KAAKC,MACpBC,KAAMJ,EAASE,KAAKG,SACpBC,IAAKN,EAASE,KAAKI,KAGrBjB,EAAQY,MAETM,OAAM,SAAUC,GACfC,QAAQD,MAAMA,MAxBF,2CAAH,qDAiCjB,OALEE,qBAAU,WACRpB,MACC,IAIL,8BACGF,GACC,qCACE,qBACEuB,UAAU,QACVC,IAAKxB,EAAKgB,KACVS,MAAM,MACNC,OAAO,MACPC,IAAI,iBAEN,4BAAI3B,EAAKA,aClBJ4B,EA9BI,WAuBf,OACI,8BACI,uBAAOC,KAAK,SAASC,QAAS,WAvBlCC,OAAOC,QAAQC,WAAWC,WAAU,SAASC,GACrCA,GAEFJ,OAAOC,QAAQC,WAAWG,UACxB,WACIC,MAAM,2BAEV,cACA,CAACC,UAAW,KAIdC,YAAW,WACTR,OAAOC,QAAQC,WAAWO,cACzB,MAEHH,MAAM,+CAO2CtB,MAAM,0BCdtD0B,MATf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCIOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d99f02e1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\n\nconst FetchData = () => {\n    const [joke, setJoke] = useState([]);\n\n    const loadFromApi = async () => {\n        const options = {\n          method: \"GET\",\n          url:\n            \"https://matchilling-chuck-norris-jokes-v1.p.rapidapi.com/jokes/random\",\n          headers: {\n            accept: \"application/json\",\n            \"x-rapidapi-key\": \"1bdbc91fbfmsh0d09ccad6062d15p159e3djsn9c9dfe2e0175\",\n            \"x-rapidapi-host\": \"matchilling-chuck-norris-jokes-v1.p.rapidapi.com\",\n          },\n        };\n    \n        axios\n          .request(options)\n          .then(function (response) {\n            let obj = {\n              joke: response.data.value,\n              icon: response.data.icon_url,\n              key: response.data.key,\n            };\n    \n            setJoke(obj);\n          })\n          .catch(function (error) {\n            console.error(error);\n          });\n      };\n\n      useEffect(() => {\n        loadFromApi();\n      }, []);\n\n      \n    return(\n    <div>\n      {joke && (\n        <>\n          <img\n            className=\"image\"\n            src={joke.icon}\n            width=\"150\"\n            height=\"150\"\n            alt=\"Chuck Norris\"\n          />\n          <p>{joke.joke}</p>\n        </>\n      )}\n    </div>\n    )\n}\n\nexport default FetchData;","import React from 'react';\n\nconst FlashLight = () => {\n    const turnOnLight = () => {\n        window.plugins.flashlight.available(function(isAvailable) {\n            if (isAvailable) {\n                // Turn on flashlight if available\n              window.plugins.flashlight.switchOn(\n                function() {\n                    alert(\"Flashlight turned on\")\n                }, \n                function() {}, \n                {intensity: 0.6} \n              );\n           \n              // Turn off the flashlight after 5 seconds\n              setTimeout(function() {\n                window.plugins.flashlight.switchOff(); \n              }, 5000);\n            } else {\n              alert(\"Flashlight not available on this device\");\n            }\n          });\n    }\n\n    return(\n        <div>\n            <input type=\"button\" onClick={() => turnOnLight()} value=\"Turn on flashlight\" />\n        </div>\n    )\n}\n\nexport default FlashLight;","import './App.css';\nimport FetchData from './components/FetchData';\nimport FlashLight from './components/FlashLight';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <FetchData />\n        <FlashLight />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}